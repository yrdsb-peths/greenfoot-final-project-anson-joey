#BlueJ class context
comment0.target=SquatKing
comment0.text=\r\n\ SquatKing\ player\ class;\ Contains\ logic\ for\r\n\ controls,\ sfx,\ animations,\ movement,\ and\ physics.\r\n\ \r\n\ Joey\ &\ Anson\r\n\ June\ 17,\ 2022\r\n
comment1.params=x\ y
comment1.target=SquatKing(int,\ int)
comment1.text=\ \r\n\ Constructor\ for\ SquatKing\ actor\r\n\ \r\n\ @param\ x\ determines\ image\ width\r\n\ @param\ y\ determines\ image\ height\r\n\ @return\ none\r\n
comment10.params=
comment10.target=boolean\ canJumpRight()
comment10.text=\ \r\n\ Checks\ if\ actor\ can\ jump\ right\ without\ clipping\ into\ a\ block\ (checks\ for\ terrain\ class\ only)\r\n\ \r\n\ No\ parameters\r\n\ @return\ true\ if\ there\ is\ no\ terrain,\ false\ if\ there\ is\ terrain\r\n
comment11.params=onSlopeLeft
comment11.target=void\ onSlopeLeft(boolean)
comment11.text=\r\n\ Sets\ if\ SquatKing\ is\ on\ a\ slopeLeftRight\ block\ from\ the\ slopeLeftRight\ class.\r\n\ \r\n\ @param\ onSlopeLeft\ whether\ or\ not\ player\ is\ on\ slopeLeftRight\ block\r\n
comment12.params=onSlopeRight
comment12.target=void\ onSlopeRight(boolean)
comment12.text=\r\n\ Sets\ if\ SquatKing\ is\ on\ a\ slopeRightLeft\ block\ from\ the\ slopeRightLeft\ class.\r\n\ \r\n\ @param\ onSlopeRight\ whether\ or\ not\ player\ is\ on\ slopeRightLeft\ block\r\n
comment13.params=isWindyLvl\ windDirection
comment13.target=void\ windyLvl(boolean,\ java.lang.String)
comment13.text=\r\n\ Sets\ if\ SquatKing\ is\ in\ a\ windy\ level\ from\ the\ game\ world\ class.\ (true\ case)\r\n\ \r\n\ @param\ isWindyLvl\ whether\ or\ not\ the\ level\ is\ windy\r\n\ @param\ windDirection\ the\ direction\ the\ wind\ is\ blowing\ in\r\n
comment14.params=isWindyLvl
comment14.target=void\ windyLvl(boolean)
comment14.text=\r\n\ Sets\ if\ SquatKing\ is\ in\ a\ windy\ level\ from\ the\ game\ world\ class.\ (false\ case)\r\n\ Overrides\ the\ previous\ method\ since\ if\ there's\ no\ wind,\ there's\ no\ wind\ direction\ either.\r\n\ \r\n\ @param\ isWindyLvl\ whether\ or\ not\ the\ level\ is\ windy\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\ \r\n\ Runs\ the\ other\ methods\ that\ contain\ game\ logic\r\n\ \r\n\ No\ parameters\ or\ returns\r\n
comment3.params=
comment3.target=void\ wind()
comment3.text=\ \r\n\ Moves\ the\ player\ left\ or\ right\ constantly\ if\ the\ level\ is\ a\ windy\ one.\r\n\ A\ level\ can\ only\ have\ wind\ blowing\ from\ one\ direction.\r\n\ Amount\ of\ movement\ is\ higher\ when\ not\ on\ the\ ground.\r\n\ \r\n\ No\ parameters\ or\ returns\r\n
comment4.params=
comment4.target=void\ animate()
comment4.text=\ \r\n\ Does\ all\ of\ the\ animating\ of\ the\ player\ image\r\n\ \r\n\ No\ parameters\ or\ returns\r\n
comment5.params=
comment5.target=void\ verticlePhysics()
comment5.text=\ \r\n\ Controls\ all\ of\ the\ player\ movement\ involving\ the\ Y-Axis\r\n\ \r\n\ No\ parameters\ or\ returns\r\n
comment6.params=
comment6.target=void\ horizontalPhysics()
comment6.text=\ \r\n\ Controls\ all\ of\ the\ player\ movement\ involving\ the\ X-axis\r\n\ \r\n\ No\ parameters\ or\ returns\r\n
comment7.params=
comment7.target=void\ jumpTimer()
comment7.text=\ \r\n\ Handles\ the\ player\ input\ of\ jumping.\ \r\n\ Controls\ magnitude\ of\ velocity\ X\ and\ Y\ based\ on\ amount\ of\ time\ up\ is\ held.\r\n\ \r\n\ No\ parameters\ or\ returns\r\n
comment8.params=
comment8.target=void\ walkMovement()
comment8.text=\ \r\n\ Handles\ the\ player\ input\ of\ walking.\ \r\n\ Moves\ left\ and\ right\ based\ on\ SPEED\ constant\r\n\ when\ left\ or\ right\ arrow\ keys\ are\ pressed\ while\ on\ a\ ground\ type\ block.\r\n\ \r\n\ No\ parameters\ or\ returns\r\n
comment9.params=
comment9.target=boolean\ canJumpLeft()
comment9.text=\ \r\n\ Checks\ if\ actor\ can\ jump\ left\ without\ clipping\ into\ a\ block\ (checks\ for\ terrain\ class\ only)\r\n\ \r\n\ No\ parameters\r\n\ @return\ true\ if\ there\ is\ no\ terrain,\ false\ if\ there\ is\ terrain\r\n
numComments=15
